{"version":3,"sources":["meteor://ðŸ’»app/server/publications.js"],"names":[],"mappings":"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","file":"/server/publications.js","sourcesContent":["Meteor.publish('space', function(spaceId) {\n\tcheck(spaceId, String);\n\treturn Spaces.find({_id: spaceId});\t\n});\n\nMeteor.publish('allSpaces', function() {\n\treturn Spaces.find({});\n});\n\nMeteor.publish('publicSpaces', function(userId) {\n\treturn Spaces.find({\"permissions.public\":true});\n});\n\nMeteor.publish('ownSpaces', function(userId) {\n\treturn Spaces.find({userId:userId});\n});\n\nMeteor.publish('spacesVisited', function(spacesId) {\n\treturn Spaces.find({ \"_id\": { \"$in\": spacesId } });\n});\n\nMeteor.publish('post', function(postId) {\n\tcheck(postId, String);\n\treturn Posts.find({_id: postId});\n});\n\n\n\n\n// Meteor.publish('homePosts', function(spaceId) {\n// \tcheck(spaceId, String);\n// \treturn Posts.find({spaceId: spaceId, type:\"home\"},{sort: {submitted: 1}});\n// });\n\n// Meteor.publish('liveFeedPosts', function(spaceId) {\n// \tcheck(spaceId, String);\n// \treturn Posts.find({spaceId: spaceId, type:\"liveFeed\"},{sort: {submitted: -1}});\n// });\n\n// Meteor.publish('lessonsPosts', function(spaceId) {\n// \tcheck(spaceId, String);\n// \treturn Posts.find({spaceId: spaceId, type:\"lessons\"});\n// });\n\n// Meteor.publish('resourcesPosts', function(spaceId) {\n// \tcheck(spaceId, String);\n// \treturn Posts.find({spaceId: spaceId, type:\"resources\"});\n// });\n\n\nMeteor.publish('posts', function(filters, skip = 0, limit = 0) {\n\treturn Posts.find(filters, {sort: {submitted:1},skip:skip,limit:limit});\n});\n\n\n// Meteor.publish('posts', function(filters,skip,limit) {\n// \treturn Posts.find(filters, {sort: {submitted: 1},skip:skip,limit:limit});\n// });\n\nMeteor.publish(\"file\", function(fileId) {\n\treturn Files.find({_id:fileId})\n});\n\nMeteor.publish(\"files\", function(spaceId) {\n\treturn Files.find({spaceId: spaceId})\n});\n\nMeteor.publish(\"allFiles\", function() {\n\treturn Files.find({})\n});\n\nMeteor.publish(\"authors\", function(spaceId) {\n\treturn Authors.find({spaceId: spaceId});\n});\n\nMeteor.publish(\"categories\", function(spaceId) {\n\treturn Categories.find({spaceId: spaceId});\n});\n\nMeteor.publish(\"tags\", function(spaceId) {\n\treturn Tags.find({spaceId: spaceId});\n});\n\nMeteor.publish('allUsers', function() {\n\treturn Meteor.users.find();\n })\n\n// Publish the current size of a collection without subscribe to the collection\n// Meteor.publish(\"count-all-live-feed-posts\", function (spaceId) {\n// \tvar self = this;\n// \tvar count = 0;\n// \tvar initializing = true;\n\n// \tvar handle = Posts.find({spaceId: spaceId, type:\"liveFeed\"}).observeChanges({\n// \t\tadded: function (doc, idx) {\n// \t\t\tcount++;\n// \t\t\tif (!initializing) {\n// \t\t\t\tself.changed(\"counts\", spaceId, {count: count});  // \"counts\" is the published collection name\n// \t\t\t}\n// \t\t},\n// \t\tremoved: function (doc, idx) {\n// \t\t\tcount--;\n// \t\t\tself.changed(\"counts\", spaceId, {count: count});  // Same published collection, \"counts\"\n// \t\t}\n// \t});\n\n// \tinitializing = false;\n\n// \t// publish the initial count. `observeChanges` guaranteed not to return\n// \t// until the initial set of `added` callbacks have run, so the `count`\n// \t// variable is up to date.\n// \tself.added(\"counts\", spaceId, {count: count});\n\n// \t// and signal that the initial document set is now available on the client\n// \tself.ready();\n\n// \t// turn off observe when client unsubscribes\n// \tself.onStop(function () {\n// \t\thandle.stop();\n// \t});\n// });\n\n\nMeteor.publish(\"count-all-pinned\", function (spaceId) {\n\tvar self = this;\n\tvar pinnedCounts = 0;\n\tvar initializing = true;\n\n\tvar handle = Posts.find({spaceId: spaceId, pinned:true}).observeChanges({\n\t\tadded: function (doc, idx) {\n\t\t\tpinnedCounts++;\n\t\t\tif (!initializing) {\n\t\t\t\tself.changed(\"pinnedCounts\", spaceId, {count: pinnedCounts});  // \"counts\" is the published collection name\n\t\t\t}\n\t\t},\n\t\tremoved: function (doc, idx) {\n\t\t\tpinnedCounts--;\n\t\t\tself.changed(\"pinnedCounts\", spaceId, {count: pinnedCounts});  // Same published collection, \"counts\"\n\t\t}\n\t});\n\n\tinitializing = false;\n\n\t// publish the initial count. `observeChanges` guaranteed not to return\n\t// until the initial set of `added` callbacks have run, so the `count`\n\t// variable is up to date.\n\tself.added(\"pinnedCounts\", spaceId, {count: pinnedCounts});\n\n\t// and signal that the initial document set is now available on the client\n\tself.ready();\n\n\t// turn off observe when client unsubscribes\n\tself.onStop(function () {\n\t\thandle.stop();\n\t});\n});\n\n\nMeteor.publish(\"count-all-files\", function (spaceId) {\n\tvar self = this;\n\tvar filesCounts = 0;\n\tvar initializing = true;\n\n\t//var handle = Posts.find({spaceId: spaceId, $or : [{fileExt:\"txt\"},{fileExt:\"rtf\"},{fileExt:\"pdf\"},{fileExt:\"zip\"}]}).observeChanges({\n\n\tvar handle = Posts.find({spaceId: spaceId, $and : [{fileId:{$exists:true} },{fileId:{$ne:false} },{fileExt:{$nin : [\"jpg\",\"jpeg\",\"png\",\"gif\"]}}]}).observeChanges({\n\t\tadded: function (doc, idx) {\n\t\t\tfilesCounts++;\n\t\t\tif (!initializing) {\n\t\t\t\tself.changed(\"filesCounts\", spaceId, {count: filesCounts});  // \"counts\" is the published collection name\n\t\t\t}\n\t\t},\n\t\tremoved: function (doc, idx) {\n\t\t\tfilesCounts--;\n\t\t\tself.changed(\"filesCounts\", spaceId, {count: filesCounts});  // Same published collection, \"counts\"\n\t\t}\n\t});\n\n\tinitializing = false;\n\n\t// publish the initial count. `observeChanges` guaranteed not to return\n\t// until the initial set of `added` callbacks have run, so the `count`\n\t// variable is up to date.\n\tself.added(\"filesCounts\", spaceId, {count: filesCounts});\n\n\t// and signal that the initial document set is now available on the client\n\tself.ready();\n\n\t// turn off observe when client unsubscribes\n\tself.onStop(function () {\n\t\thandle.stop();\n\t});\n});\n\n\nMeteor.publish(\"count-all-images\", function (spaceId) {\n\tvar self = this;\n\tvar imagesCounts = 0;\n\tvar initializing = true;\n\n\tvar handle = Posts.find({spaceId: spaceId, $or : [{fileExt:\"jpg\"},{fileExt:\"jpeg\"},{fileExt:\"gif\"},{fileExt:\"png\"}]}).observeChanges({\n\t\tadded: function (doc, idx) {\n\t\t\timagesCounts++;\n\t\t\tif (!initializing) {\n\t\t\t\tself.changed(\"imagesCounts\", spaceId, {count: imagesCounts});  // \"counts\" is the published collection name\n\t\t\t}\n\t\t},\n\t\tremoved: function (doc, idx) {\n\t\t\timagesCounts--;\n\t\t\tself.changed(\"imagesCounts\", spaceId, {count: imagesCounts});  // Same published collection, \"counts\"\n\t\t}\n\t});\n\n\tinitializing = false;\n\n\t// publish the initial count. `observeChanges` guaranteed not to return\n\t// until the initial set of `added` callbacks have run, so the `count`\n\t// variable is up to date.\n\tself.added(\"imagesCounts\", spaceId, {count: imagesCounts});\n\n\t// and signal that the initial document set is now available on the client\n\tself.ready();\n\n\t// turn off observe when client unsubscribes\n\tself.onStop(function () {\n\t\thandle.stop();\n\t});\n});\n\n\n\nMeteor.publish(\"count-all-live-feed\", function (spaceId) {\n\tvar self = this;\n\tvar liveFeedCounts = 0;\n\tvar initializing = true;\n\n\tvar handle = Posts.find({spaceId: spaceId, type:'liveFeed'}).observeChanges({\n\t\tadded: function (doc, idx) {\n\t\t\tliveFeedCounts++;\n\t\t\tif (!initializing) {\n\t\t\t\tself.changed(\"liveFeedCounts\", spaceId, {count: liveFeedCounts});  // \"counts\" is the published collection name\n\t\t\t}\n\t\t},\n\t\tremoved: function (doc, idx) {\n\t\t\tliveFeedCounts--;\n\t\t\tself.changed(\"liveFeedCounts\", spaceId, {count: liveFeedCounts});  // Same published collection, \"counts\"\n\t\t}\n\t});\n\n\tinitializing = false;\n\n\t// publish the initial count. `observeChanges` guaranteed not to return\n\t// until the initial set of `added` callbacks have run, so the `count`\n\t// variable is up to date.\n\tself.added(\"liveFeedCounts\", spaceId, {count: liveFeedCounts});\n\n\t// and signal that the initial document set is now available on the client\n\tself.ready();\n\n\t// turn off observe when client unsubscribes\n\tself.onStop(function () {\n\t\thandle.stop();\n\t});\n});"]}