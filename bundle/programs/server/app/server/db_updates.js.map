{"version":3,"sources":["meteor://ðŸ’»app/server/db_updates.js"],"names":[],"mappings":"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","file":"/server/db_updates.js","sourcesContent":["// ###  Update database\n\n\n// As of v1.1\n// Check if home posts have order attribute\nif (Posts.find({type:\"home\"}) != 0) {\n\tconsole.log('Checking if home posts without \"order\" attribute exist and updating if so');\n\tif (Posts.find({type:\"home\", order:{$exists:false}}).count() > 0) {\n\t\tvar spaces = Spaces.find({}).fetch();\n\t\tfor (i=0; i<spaces.length; i++) {\n\t\t\tvar posts = Posts.find({spaceId:spaces[i]._id,type:\"home\"}).fetch();\n\t\t\tfor (k=0; k<posts.length; k++) {\n\t\t\t\tPosts.update({_id:posts[k]._id},{$set:{\"order\":k}});\n\t\t\t\tconsole.log(\"Updating post : \"+posts[k]._id);\n\t\t\t}\n\t\t}\n\t}\n\tPosts.update({type:\"home\", order:{$exists:false}},{$set:{\"order\":0}}); // If posts are not linked to a spaceId\n}\n\n\n// As of v1.2\n// Check if categories have type attribute\nconsole.log('Checking if categories without \"type\" attribute exist and updating if so');\nif (Categories.find({type:{$exists:false}}).count() > 0) {\n\tconsole.log('There are categories without \"type\" attribute');\n\tCategories.update({type:{$exists:false}},{$set:{\"type\":\"liveFeed\"}}, function(err,res) { // Before v1.2, categories was only available for liveFeed\n\t\tif (err) {\n\t\t\tconsole.log('Error when updating categories without \"type\" attribute : '+error.message);\n\t\t}\n\t\telse {\n\t\t\tconsole.log('All categories without \"order\" attribute have been updated.');\n\t\t\tconsole.log(res);\n\t\t}\n\t});\n}\n\n\n// As of v1.25\n// Check if spaces have permissions attributes\nconsole.log('Checking if spaces without \"permissions\" attribute exist and updating if so');\nif (Spaces.find({\"permissions\":{$exists:false}}).count() > 0) {\n\tconsole.log('There are spaces without \"permissions\" attribute');\n\tSpaces.update({\"permissions\":{$exists:false}},{$set:{\"permissions\":{\"public\":false,\"liveFeedAddPost\":true,\"liveFeedAddCategory\":false}}}, function(err,res) {\n\t\tif (err) {\n\t\t\tconsole.log('Error when updating spaces without \"permissions\" attribute : '+error.message);\n\t\t}\n\t\telse {\n\t\t\tconsole.log('All spaces without \"permissions\" attribute have been updated.');\n\t\t\tconsole.log(res);\n\t\t}\n\t});\n} else {\n\t//Check if spaces have permissions.liveFeedAddPost attributes\n\tconsole.log('Checking if spaces without \"permissions.liveFeedAddPost\" attribute exist and updating if so');\n\tif (Spaces.find({\"permissions.liveFeedAddPost\":{$exists:false}}).count() > 0) {\n\t\tconsole.log('There are spaces without \"permissions.liveFeedAddPost\" attribute');\n\t\tSpaces.update({\"permissions.liveFeedAddPost\":{$exists:false}},{$set:{\"permissions.liveFeedAddPost\":\"own\"}}, function(err,res) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('Error when updating spaces without \"permissions.liveFeedAddPost\" attribute : '+error.message);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('All spaces without \"permissions.liveFeedAddPost\" attribute have been updated.');\n\t\t\t\tconsole.log(res);\n\t\t\t}\n\t\t});\n\t}\n\t//Check if spaces have permissions.liveFeedAddCategory attributes\n\tconsole.log('Checking if spaces without \"permissions.liveFeedAddCategory\" attribute exist and updating if so');\n\tif (Spaces.find({\"permissions.liveFeedAddCategory\":{$exists:false}}).count() > 0) {\n\t\tconsole.log('There are spaces without \"permissions.liveFeedAddCategory\" attribute');\n\t\tSpaces.update({\"permissions.liveFeedAddCategory\":{$exists:false}},{$set:{\"permissions.liveFeedAddCategory\":false}}, function(err,res) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('Error when updating spaces without \"permissions.liveFeedAddCategory\" attribute : '+error.message);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('All spaces without \"permissions.liveFeedAddCategory\" attribute have been updated:');\n\t\t\t\tconsole.log(res);\n\t\t\t}\n\t\t});\n\t}\n}"]}