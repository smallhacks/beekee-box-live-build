{"version":3,"sources":["meteor://ðŸ’»app/lib/collections/categories.js"],"names":[],"mappings":";;;;;;;;AAAA,UAAU,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;;;;AAIhD,UAAU,CAAC,KAAK,CAAC;;AAEhB,OAAM,EAAE,YAAW;AAAC,SAAO,IAAI;EAAC;;AAEhC,OAAM,EAAE,YAAW;AAAC,SAAO,IAAI;EAAC;;AAEhC,OAAM,EAAE,YAAW;AAAC,SAAO,IAAI;EAAC;CAChC,CAAC,CAAC;;AAGH,MAAM,CAAC,OAAO,CAAC;;AAEd,eAAc,EAAE,UAAS,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;AAC7C,YAAU,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;EACxE;AACD,aAAY,EAAE,UAAS,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;AACvD,MAAI,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;AACjF,YAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,EAAC,IAAI,EAAC,OAAO,EAAC,EAAC,EAAE,UAAS,KAAK,EAAE;AACvE,OAAI,KAAK,EAAE;AACV,WAAO,CAAC,GAAG,CAAC,sCAAsC,GAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAClE,MACI;AACJ,SAAK,CAAC,MAAM,CAAC,EAAC,OAAO,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,EAAC,EAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,OAAO,EAAC,EAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;IAC1G;GACD,CAAC,CAAC;EACH;AACD,eAAc,EAAE,UAAS,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;AAC7C,MAAI,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;AAC9E,YAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAS,KAAK,EAAE;AAC/C,OAAI,KAAK,EAAE;AACV,WAAO,CAAC,GAAG,CAAC,iCAAiC,GAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7D,MACI;AACJ,SAAK,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAC,EAAC,MAAM,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,EAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;IACnG;GACD,CAAC,CAAC;EACH;CACD,CAAC,CAAC,sE","file":"/lib/collections/categories.js","sourcesContent":["Categories = new Mongo.Collection('categories'); // Store all categories\n\n// TODO : add server-side security\n\nCategories.allow({\n\n\tinsert: function() {return true},\n\n\tremove: function() {return true},\n\n\tupdate: function() {return true}\n});\n\n\nMeteor.methods({\n\n\tcategoryInsert: function(type, name, spaceId) {\n\t\tCategories.insert({type: type, name: name, spaceId: spaceId, nRefs: 0});\n\t},\n\tcategoryEdit: function(spaceId, type, oldName, newName) {\n\t\tvar category = Categories.findOne({type: type, name: oldName, spaceId: spaceId});\n\t\tCategories.update(category._id, {$set: {name:newName}}, function(error) {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(\"Error when changing category name : \"+error.message);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tPosts.update({spaceId:spaceId, type: type, category: oldName},{$set: {category: newName}}, {multi: true}); // Update all author posts with new name\n\t\t\t}\n\t\t});\n\t},\n\tcategoryDelete: function(type, name, spaceId) {\n\t\tvar category = Categories.findOne({type: type, name: name, spaceId: spaceId});\n\t\tCategories.remove(category._id, function(error) {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(\"Error when deleting category : \"+error.message);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tPosts.update({type: type, spaceId:spaceId, category: name},{$unset: {category:\"\"}}, {multi: true}); // Update all author posts with new name\n\t\t\t}\n\t\t});\n\t}\n});"]}