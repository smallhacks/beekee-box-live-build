{"version":3,"sources":["meteor://ðŸ’»app/lib/collections/posts.js"],"names":[],"mappings":"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","file":"/lib/collections/posts.js","sourcesContent":["Posts = new Mongo.Collection('posts');\n\n// TODO : add server-side security\n\nPosts.allow({\n\tinsert: function() {return true;},\n\n\tremove: function() {return true;},\n\n\tupdate: function() {return true;}\n});\n\nif(Meteor.isClient) {\n\tCounts = new Mongo.Collection(\"counts\"); // Store post count of a space ; Allow to count them without subscribe to all posts (optimization)\n\tPinnedCounts = new Mongo.Collection(\"pinnedCounts\");\n\tFilesCounts = new Mongo.Collection(\"filesCounts\");\n\tImagesCounts = new Mongo.Collection(\"imagesCounts\");\n\tLiveFeedCounts = new Mongo.Collection(\"liveFeedCounts\");\n}\n\nif(Meteor.isServer) {\n\n\tPosts.before.insert(function (userId, doc) {\n\t\t// change modified date\n\t\tSpaces.update(doc.spaceId, {$set: {modified: Date.now()}});\n\t\tdoc.version =  1;\n\t\t//doc.modified = Date.now();\n\t\t/*\n\t\tvar versionning = {};\n\t\t_.extend(versionning, doc, {modifiedBy: userId});\n\t\tMeteor.call('addPostVersion', versionning);\n\t\t*/\n\t});\n\n\n\t// Copy post in postVersion before updated\n\t// TODO : refactoring\n\tPosts.before.update(function (userId, doc, fieldNames, modifier, options) {\n\n\n\n\t\t// var versionning = {};\n\t\t// _.extend(versionning, doc, {modifiedBy: userId});\n\t\t// Meteor.call('addPostVersion', versionning);\n\n\t\t// var newInc = doc.version+1;\n\t\t// if (!modifier.$set) modifier.$set = {};\n\t\t// modifier.$set.version = newInc;\n\t\t// modifier.$set.modified = Date.now();\n\t});\n\n\n\tPosts.before.remove(function (userId, doc) { \n\n\n\t\t// var deletionTime = Date.now();\n\n\t\t// Meteor.call('tagsEdit', {spaceId: doc.spaceId, newTags: [], oldTags: doc.tags}, function(error) { // Decrement tags nRefs\n\t\t// \tif (error) {\n\t\t// \t\tthrowError(error.reason);\n\t\t// \t}\n \t// \t});\n\n\t\t// var file = Files.findOne({'metadata.postId': doc.fileId}); // Remove file\n\t\t// if (file){\n\t\t// \t // TODO : remove file (not only from collection)\n\t\t// \tFiles.remove(file._id);\n\t\t// }\n\n\t\t// Delete the file if exists\n\t\tvar fileId = doc.fileId;\n\t\tvar fileExt = doc.fileExt;\n\t\tif (fileId) {\n\t\t\tFiles.remove({fileId:fileId});\n\t\t\tMeteor.call('deleteFile',doc);\n\t\t}\n\n\t\tif (doc.type == 'home') { // Update post order\n\t\t\tvar post = doc;\n\n\t\t\tvar postsDown = Posts.find({spaceId:doc.spaceId, type:'home', order:{$gt:post.order}}).fetch();\n\n\t\t\tfor (var i=0; i<postsDown.length; i++) {\n\t\t\t\tconsole.log(\"id : \"+postsDown[i]._id);\n\t\t\t\tvar currentPost = postsDown[i];\n\t\t\t\tPosts.update({_id:currentPost._id},{$set:{order:currentPost.order-1}});\n\t\t\t}\n\t\t}\n\n\t\tif (doc.type == 'liveFeed') {\n\t\t\tvar author = Authors.findOne({spaceId: doc.spaceId, name: doc.author});\n\t\t\tAuthors.update(author._id, {$inc: {nRefs: -1}}); // Decrement author nRefs\n\n\t\t\tif (doc.category) {\n\t\t\t\tvar category = Categories.findOne({spaceId: doc.spaceId, type:\"liveFeed\", name: doc.category});\n\t\t\t\tif (category)\n\t\t\t\t\tCategories.update(category._id, {$inc: {nRefs: -1}}); // Decrement category nRefs\n\t\t\t}\n\t\t}\n\n\t\tif (doc.type == 'resource') {\n\t\t\tif (doc.category) {\n\t\t\t\tvar category = Categories.findOne({spaceId: doc.spaceId, type:\"resource\", name: doc.category});\n\t\t\t\tif (category)\n\t\t\t\t\tCategories.update(category._id, {$inc: {nRefs: -1}}); // Decrement category nRefs\n\t\t\t}\n\t\t}\n\t\t// // Add post to posts versions\n\t\t// // TODO : refactoring\n\t\t// var space = Spaces.findOne(doc.spaceId);\n\t\t// // var oldPosts = [];\n\t\t// // if (space.oldPosts !== undefined) {\n\t\t// // \toldPosts = space.oldPosts;\n\t\t// // }\n\t\t// // oldPosts.push(doc._id);\n\t\t// //Spaces.update(doc.spaceId, {$set: {oldPosts: oldPosts, modified: Date.now()}});\n\t\t// Spaces.update(doc.spaceId, {$set: {modified: Date.now()}});\n\n\t\t// doc.version =  doc.version++;\n\t\t// doc.modified = Date.now();\n\t\t// var versionning = {};\n\t\t// _.extend(versionning, doc, {modifiedBy: userId, last: true});\n\t\t// Meteor.call('addPostVersion', versionning);\n\t});\n}\n\n\nMeteor.methods({\n\n\taddLikeComment: function(data) {\n\t\tPosts.update({_id:data.currentPostId,\"comments.id\":data.currentCommentId}, {$push: {\"comments.$.likes\": data.author}});\n\t},\n\tremoveLikeComment: function(data) {\n\t\tPosts.update({_id:data.currentPostId,\"comments.id\":data.currentCommentId}, {$pull: {\"comments.$.likes\": data.author}});\n\t},\n\thomePostInsert: function(postAttributes) {\n\t\tcheck(postAttributes.spaceId, String);\n\n\t\t//if (Meteor.settings.public)\n\t\t\t//var postFromCloud = !(Meteor.settings.public.isBox === \"true\"); // Set where post is submitted (box or cloud)\n\n\t\tpost = _.extend(postAttributes, {\n\t\t\tsubmitted: Date.now(),\n\t\t\torder: Posts.find({spaceId: postAttributes.spaceId, type: postAttributes.type}).count(),\n\t\t\t//nb: Posts.find({spaceId: postAttributes.spaceId}).count() + 1,\n\t\t\t//pinned : false,\n\t\t});\n\n\t\tvar space = Spaces.findOne(postAttributes.spaceId);\n\t\tpost._id = Posts.insert(post);\t\t\n\t\treturn post._id;\n\t},\n\tpostInsert: function(postAttributes) {\n\t\tcheck(postAttributes.spaceId, String);\n\n\t\t//if (Meteor.settings.public)\n\t\t\t//var postFromCloud = !(Meteor.settings.public.isBox === \"true\"); // Set where post is submitted (box or cloud)\n\n\t\titem = Authors.findOne({spaceId: postAttributes.spaceId, name: postAttributes.author});\n\t\tAuthors.update(item, {$inc: {nRefs: 1}});\n\t\tpost = _.extend(postAttributes, {\n\t\t\tauthorId: Authors.findOne({spaceId: postAttributes.spaceId, name: postAttributes.author})._id,\n\t\t\tsubmitted: Date.now(),\n\t\t\tnb: Posts.find({spaceId: postAttributes.spaceId}).count() + 1,\n\t\t\tpinned : false,\n\t\t\t// postFromCloud: postFromCloud // Workaround bug sync\n\t\t});\n\n\t\tvar space = Spaces.findOne(postAttributes.spaceId);\n\n\t\tcategory = Categories.findOne({spaceId: postAttributes.spaceId, name: postAttributes.category}); // Increment category nRefs\n\t\tCategories.update(category, {$inc: {nRefs: 1}});\n\n\t\tpost._id = Posts.insert(post);\t\t\n\t\treturn post._id;\n\t}\n});"]}